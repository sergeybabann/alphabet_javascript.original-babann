Объектно-ориентированное программирование - это методология программирования, основанная на 
представлении программы в виде совокупности объектов, каждый из которых является экземпляром 
определенного класса, а классы образуют иерархию наследования.

Программа представляется в виде совокупности элементов. Среди этой совокупности можно выделить 
главные элементы и подчиненные элементы. ПОдчиненные элементы наследуют некоторые черты главных элементов.
1. Главные элементы - классы 
2. Подчиненные элементы - объекты

Основные принципы объектно-ориентированного программирования:
1. Абстракция
2. Инкапсуляция
3. Наследование 
4. Полиморфизм

1. Абстракция - это использование только тех характеристик объекта, которые с достаточной точностью 
представляют его в данной системе. Это выделение в моделируемом предмете сущностей, важных для решения 
конкретной задачи. Указанное выше контекстное понимание объекта (предмета) в общем случае формализуется 
в виде класса. 

2. Инкапсуляция - это объединение свойств (данных) и методов (поведения), работающих со свойствами, в классе.
Суть инкапсуляции: организация иерархической управляемости через сокрытие собственно реализации (чтобы было 
достаточно простой команды "что делать", без одновременной команды как именно делать). Класс должен защищать
целостность данных, которые он инкапсулирует.

3. Наследование - это свойство системы, позволяющее описать новый класс на основе уже существующего с
частично и полностью заимствующейся функциональностью. Наследование позволяет на каждой иерархической
ступени учитывать только изменения, не дублируя все остальное, учтенное на предыдущих шагах. 
JavaScript вместо наследования использует прототипирование: есои искомого свойства или вызванного метода
в самом объекте нет, то запрос передается объекту-прототипу(свойство prototype всех объектов javascript).

4. Полиморфизм - это свойство системы, позволяющее использовать объекты с одинаковым интерфейсом без 
информации о типе и внутренней структуре объекта. Это способность объекта выбирать правильный метод в
зависисмости от типа данных, полученных в сообщении. Цель полиморфизма: использование одного имени для 
задания общих для класса действий, при этом выполнение каждого конкретного действия будет определяться 
типом данных. 

Класс - это универсальный, комплексный тип данных, состоящий из тематически единого набора:
    - полей (переменных более элементарных типов) и
    - методов (функций для работы с этими полями) 

Класс является моделью информационной сущности с внутренним и внешним интерфейсами. 
Переменная-объект, относящаяся к заданному классом типу, называется экземпляром класса. 
В свою очередь, целостность предметной области объектов и их интерфейсов, а также удобство их 
проектирования, обеспечивается наследованием. 

Объект - это появляющийся при создании экземпляра класса набор свойств и их значений в памяти, на которые 
можно сослаться с помощью идентификатора:

    - каждое свойство состоит из имени и значения, ассоциированного с этим именем.
    - значением свойства может быть функция, которую можно назвать методом объекта. 